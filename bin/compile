#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

BP_DIR=$(cd $(dirname $0)/..; pwd) # absolute path
BIN_DIR=$BP_DIR/bin

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

JVM_COMMON_BUILDPACK=${JVM_COMMON_BUILDPACK:-"https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/jvm-common.tgz"}
mkdir -p /tmp/jvm-common
curl --retry 3 --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common --strip-components=1
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java

install_java_with_overlay ${BUILD_DIR}

WILDFLY_VERSION="26.1.3.Final"
WILDFLY_SHA1="b9f52ba41df890e09bb141d72947d2510caf758c"
JBOSS_HOME=".jboss/wildfly-${WILDFLY_VERSION}"
POSTGRESQL_VERSION="42.7.0"
POSTGRESQL_SHA1="b7f61848ac43ae9fa6e38935bfd75628b7fc9086"


cd $BUILD_DIR

mkdir -p .jboss

echo -n "-----> Downloading Wildfly ${WILDFLY_VERSION}... "
curl -L -O https://github.com/wildfly/wildfly/releases/download/$WILDFLY_VERSION/wildfly-$WILDFLY_VERSION.tar.gz
echo "downloaded"
sha1sum wildfly-$WILDFLY_VERSION.tar.gz | grep $WILDFLY_SHA1 > /dev/null 2>&1
echo "verified"
tar xf wildfly-$WILDFLY_VERSION.tar.gz
echo "extracted"
mv wildfly-$WILDFLY_VERSION $JBOSS_HOME
echo "moved"
rm wildfly-$WILDFLY_VERSION.tar.gz
echo "done"


echo "-----> Downloading Postgres driver ${POSTGRESQL_VERSION}... "
curl -L -O https://repo1.maven.org/maven2/org/postgresql/postgresql/${POSTGRESQL_VERSION}/postgresql-${POSTGRESQL_VERSION}.jar  
echo "-----> downloaded"
# sha1sum postgresql-${POSTGRESQL_VERSION}.jar | grep $POSTGRESQL_SHA1 > /dev/null 2>&1
# echo "-----> verified"


# 1) startup
echo "-----> Starting WildFly ... "
$JBOSS_HOME/bin/standalone.sh --admin-only &

WILDFLY_RUNNING=1

until [ $WILDFLY_RUNNING -eq 0 ]; do
	$JBOSS_HOME/bin/jboss-cli.sh --connect --command=":read-attribute(name=server-state)"
	WILDFLY_RUNNING=$?
	sleep 3
done	

# 2) create postgresql module
echo "-----> Postgres module Creating... "
#$JBOSS_HOME/bin/jboss-cli.sh --connect --command="module add --name=org.postgresql --resources=$BUILD_DIR/postgresql-$POSTGRESQL_VERSION.jar --dependencies=javax.api,javax.transaction.api"
echo "-----> Postgres module Created... "

# 3) install driver
echo "-----> JDBC driver installing ... "
#$JBOSS_HOME/bin/jboss-cli.sh --connect --command="/subsystem=datasources/jdbc-driver=postgresql:add(driver-name=postgresql,driver-module-name=org.postgresql,driver-xa-datasource-class-name=org.postgresql.xa.PGXADataSource)"

#$JBOSS_HOME/bin/jboss-cli.sh --connect --command="/subsystem=datasources:installed-drivers-list"
echo "-----> JDBC driver installed ... "

# 4) shutdown
echo "-----> shutdown WildFly ... "
#$JBOSS_HOME/bin/jboss-cli.sh --connect command=:shutdown

echo -n "-----> Deploying war file(s)... "
cp target/*.war $JBOSS_HOME/standalone/deployments/
echo "done"

echo "-----> Creating configuration..."
if [ -f $BUILD_DIR/Procfile ]; then
  echo "        WARNING: overwriting existing Procfile"
fi

cat << EOF > $BUILD_DIR/Procfile
web: \$JBOSS_HOME/bin/standalone.sh -b=0.0.0.0 -Djboss.http.port=\$PORT
EOF

cat << EOF > $BUILD_DIR/.profile.d/jboss.sh
export JBOSS_HOME=${JBOSS_HOME}
EOF
